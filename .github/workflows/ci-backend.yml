name: CI Backend (Node APIs)

on:
  push:
    branches: [ main ]
    paths:
      - 'contta-search-api-main/contta-search-api-main/**'
      - 'contta-excel-parser-main/contta-excel-parser-main/**'
      - '.github/workflows/ci-backend.yml'
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project:
          - contta-search-api-main/contta-search-api-main
          - contta-excel-parser-main/contta-excel-parser-main
    defaults:
      run:
        working-directory: ${{ matrix.project }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          # Cache disabled to avoid failures when lockfile is absent in monorepo projects

      - name: Enable corepack (Yarn support)
        shell: bash
        run: |
          npm -v
          corepack enable || true
          corepack prepare yarn@stable --activate || true

      - name: Install dependencies (npm or yarn)
        shell: bash
        run: |
          if [ -f yarn.lock ]; then
            echo "Using yarn"
            yarn --version || true
            yarn install --frozen-lockfile
            echo "PKG_MGR=yarn" >> $GITHUB_ENV
          elif [ -f package-lock.json ]; then
            echo "Using npm ci"
            npm ci
            echo "PKG_MGR=npm" >> $GITHUB_ENV
          else
            echo "Using npm i"
            npm i
            echo "PKG_MGR=npm" >> $GITHUB_ENV
          fi

      - name: Build
        shell: bash
        run: |
          if [ "$PKG_MGR" = "yarn" ]; then yarn build; else npm run build; fi

      - name: Typecheck (emit d.ts only)
        shell: bash
        run: |
          if [ "$PKG_MGR" = "yarn" ]; then yarn postbuild; else npm run postbuild; fi
        continue-on-error: true
