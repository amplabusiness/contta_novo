name: MongoDB Atlas Setup (API)

on:
  workflow_dispatch:
    inputs:
      atlasOrgId:
        description: Atlas Org ID (se necessário para listagem de projetos)
        required: false
      atlasProjectId:
        description: Atlas Project (Group) ID
        required: true
      allowIp:
        description: IP/CIDR para liberar no Access List (ex. 0.0.0.0/0 temporário)
        required: false
      allowComment:
        description: Comentário para o Access List
        required: false
      dbUser:
        description: Nome do usuário de banco (ex. contta_app)
        required: false
      dbPassword:
        description: Senha do usuário de banco
        required: false
      dbRoles:
        description: Roles em JSON (opcional)
        required: false

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Verificar variáveis
        run: |
          echo "Project: ${{ inputs.atlasProjectId }}"
          if [ -n "${{ inputs.atlasOrgId }}" ]; then echo "Org: ${{ inputs.atlasOrgId }}"; fi

      - name: (Opcional) Listar projetos da organização
        if: ${{ inputs.atlasOrgId != '' }}
        env:
          ATLAS_PUBLIC_KEY: ${{ secrets.ATLAS_PUBLIC_KEY }}
          ATLAS_PRIVATE_KEY: ${{ secrets.ATLAS_PRIVATE_KEY }}
        run: |
          curl --silent --digest -u "$ATLAS_PUBLIC_KEY:$ATLAS_PRIVATE_KEY" \
            --get "https://cloud.mongodb.com/api/atlas/v1.0/orgs/${{ inputs.atlasOrgId }}/groups" | jq '.results[] | {id, name}'

      - name: (Opcional) Adicionar IP Access List
        if: ${{ inputs.allowIp != '' }}
        env:
          ATLAS_PUBLIC_KEY: ${{ secrets.ATLAS_PUBLIC_KEY }}
          ATLAS_PRIVATE_KEY: ${{ secrets.ATLAS_PRIVATE_KEY }}
        run: |
          data=$(jq -n --arg ip "${{ inputs.allowIp }}" --arg c "${{ inputs.allowComment }}" '{"results": [{"ipAddress": $ip, "comment": $c}] }')
          echo "$data" | jq .
          curl --silent --digest -u "$ATLAS_PUBLIC_KEY:$ATLAS_PRIVATE_KEY" \
            -H 'Content-Type: application/json' \
            -X POST \
            -d "$data" \
            "https://cloud.mongodb.com/api/atlas/v1.0/groups/${{ inputs.atlasProjectId }}/accessList" | jq .

      - name: (Opcional) Criar usuário de banco
        if: ${{ inputs.dbUser != '' && inputs.dbPassword != '' }}
        env:
          ATLAS_PUBLIC_KEY: ${{ secrets.ATLAS_PUBLIC_KEY }}
          ATLAS_PRIVATE_KEY: ${{ secrets.ATLAS_PRIVATE_KEY }}
        run: |
          ROLES_JSON='${{ inputs.dbRoles }}'
          if [ -z "$ROLES_JSON" ]; then ROLES_JSON='[{"databaseName":"admin","roleName":"readWriteAnyDatabase"}]'; fi
          data=$(jq -n \
            --arg u "${{ inputs.dbUser }}" \
            --arg p "${{ inputs.dbPassword }}" \
            --argjson roles "$ROLES_JSON" \
            '{ "databaseName": "admin", "roles": $roles, "username": $u, "password": $p }')
          echo "$data" | jq .
          curl --silent --digest -u "$ATLAS_PUBLIC_KEY:$ATLAS_PRIVATE_KEY" \
            -H 'Content-Type: application/json' \
            -X POST \
            -d "$data" \
            "https://cloud.mongodb.com/api/atlas/v1.0/groups/${{ inputs.atlasProjectId }}/databaseUsers" | jq .
